// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RESTfulBankApplication.Domain;

namespace RESTfulBankApplication.Migrations
{
    [DbContext(typeof(BankContext))]
    partial class BankContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RESTfulBankApplication.Domain.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MoneyAmount")
                        .HasColumnType("float");

                    b.HasKey("AccountId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("RESTfulBankApplication.Domain.Models.AccountProfile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ProfileId");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("AccountProfile");
                });

            modelBuilder.Entity("RESTfulBankApplication.Domain.Models.Bill", b =>
                {
                    b.Property<int>("PayeeId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<double>("BillSum")
                        .HasColumnType("float");

                    b.HasKey("PayeeId", "SenderId");

                    b.HasIndex("SenderId");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("RESTfulBankApplication.Domain.Models.FixedDeposit", b =>
                {
                    b.Property<int>("DepositId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<double>("DepositAmount")
                        .HasColumnType("float");

                    b.Property<double>("DepositRate")
                        .HasColumnType("float");

                    b.HasKey("DepositId");

                    b.HasIndex("AccountId");

                    b.ToTable("FixedDeposit");
                });

            modelBuilder.Entity("RESTfulBankApplication.Domain.Models.Payee", b =>
                {
                    b.Property<int>("PayeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PayeeId");

                    b.ToTable("Payee");
                });

            modelBuilder.Entity("RESTfulBankApplication.Domain.Models.AccountProfile", b =>
                {
                    b.HasOne("RESTfulBankApplication.Domain.Models.Account", "Account")
                        .WithOne("AccountProfile")
                        .HasForeignKey("RESTfulBankApplication.Domain.Models.AccountProfile", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RESTfulBankApplication.Domain.Models.Bill", b =>
                {
                    b.HasOne("RESTfulBankApplication.Domain.Models.Payee", "Payee")
                        .WithMany("Bills")
                        .HasForeignKey("PayeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RESTfulBankApplication.Domain.Models.Account", "Sender")
                        .WithMany("Bills")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payee");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("RESTfulBankApplication.Domain.Models.FixedDeposit", b =>
                {
                    b.HasOne("RESTfulBankApplication.Domain.Models.Account", "Account")
                        .WithMany("FixedDeposits")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RESTfulBankApplication.Domain.Models.Account", b =>
                {
                    b.Navigation("AccountProfile");

                    b.Navigation("Bills");

                    b.Navigation("FixedDeposits");
                });

            modelBuilder.Entity("RESTfulBankApplication.Domain.Models.Payee", b =>
                {
                    b.Navigation("Bills");
                });
#pragma warning restore 612, 618
        }
    }
}
